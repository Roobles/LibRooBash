#!/bin/bash

error-out()
{
  1>&2 printf "\n\e[1;31mError\e[0m: %s\n" "${@}"
  exit 1
}

info()
{
  printf "\n\e[1;32mInfo\e[0m: %s\n" "${@}"
}

warn()
{
  printf "\n\e[1;33mWarning\e[0m: %s\n" "${@}"
}

assert-directory()
{
  [ -d "${1}" ] || error-out "Directory '${1}' does not exist."
}

assert-file()
{
  [ -f "${1}" ] || error-out "File '${1}' does not exist."
}

assert-file-location()
{
  assert-directory $(dirname "${1}")
}

assert-newer()
{
  SOURCE_FILE="${1}"
  DEST_FILE="${2}"

  [ -z "${SOURCE_FILE}" ] && error-out 'No source file provided.'
  [ -z "${DEST_FILE}" ] && error-out 'No destination file provided.'
  assert-file "${SOURCE_FILE}"
  assert-file "${DEST_FILE}"

  SOURCE_NAME="$(basename "${SOURCE_FILE}")"
  DEST_NAME="$(basename "${DEST_FILE}")"

  ERROR_MSG="File '${SOURCE_NAME}' is not newer than '${DEST_FILE}'."
  [ "${SOURCE_NAME}" == "${DEST_NAME}" ] && ERROR_MSG="File '${SOURCE_NAME}' is not newer."
  [ ! "${SOURCE_FILE}" -nt "${DEST_FILE}" ] && error-out "${ERROR_MSG}"
}

file-size()
{
  stat -c '%s' "$@"
}
