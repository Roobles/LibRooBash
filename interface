#!/bin/bash

# Global Variables
AVAILABLE_INTERFACES=()
NETSH_BIN='/cygdrive/c/Windows/system32/netsh'
NETSH_CMD=("${NETSH_BIN}" interface ipv4)
INTERFACE=""
SOURCE=""
ADDRESS=""
NET_CMD="list"
LIST_TARGET="addresses"
STATIC_NETMASK="255.255.255.0"
STATIC_GATEWAY="172.24.231.254"

# Functions
function error-out
{
  echo 1>&2 Error: $@
  exit 1
}

function query-interfaces
{
  if [ "${#AVAILABLE_INTERFACES[@]}" -eq "0" ]; then
    IFS=$'\n' 
    for interface_entry in `"${NETSH_BIN}" interface ipv4 show interfaces|grep -E '^ *[0-9]+'`; do
      INTERFACE_DEVICE="`echo $interface_entry|awk '{ for(i=1;i<=NF;i++) if (i>4) printf((i != NF) ? "%s " : "%s", $i) }'|tr -d '\r'`"
      AVAILABLE_INTERFACES+=("$INTERFACE_DEVICE")
    done
    IFS=$' '
  fi
}

function get-interface
{
  TARGET_INTERFACE="${INTERFACE}"
  query-interfaces

  FOUND_INTERFACE=""
  for interface in "${AVAILABLE_INTERFACES[@]}"; do
    INTERFACE_FOUND=`echo $interface|grep -i "$TARGET_INTERFACE"`
    if [ -n "$INTERFACE_FOUND" ]; then
      FOUND_INTERFACE="$interface"
      break
    fi
  done

  [ -z "$FOUND_INTERFACE" ] && error-out "Could not find specified interface '$TARGET_INTERFACE'"
  echo $FOUND_INTERFACE
}

function set-interface
{
  # Check Input
  [ -z "${INTERFACE}" ] && error-out "Must specify an ethernet device."
  INTERFACE="`get-interface`" || error-out "Couldn't set Interface."

  [ -z "${SOURCE}" ] && error-out "Must specify a source."
  [[ "${SOURCE,,}" != "dhcp" ]] && [[ "${SOURCE,,}" != "static" ]] && error-out "Source must be static or dhcp."

  # Command Builder
  NETSH_CMD+=(set address name=\"${INTERFACE}\" source="${SOURCE,,}")

  if [[ "${SOURCE,,}" != "dhcp" ]];then
    [ -z "${ADDRESS}" ] && error-out "Must specify an address if not using dhcp."
    NETSH_CMD+=(address="${ADDRESS}" gateway="${STATIC_GATEWAY}" mask="${STATIC_NETMASK}")
  fi

  NETSH_CMD=(cygstart --action=runas ${NETSH_CMD[@]})
}

function list-interface
{
  [[ "${LIST_TARGET,,}" != "addresses" ]] && [[ "${LIST_TARGET,,}" != "interfaces" ]] && error-out "List target must be either 'addresses' or 'interfaces'."
  NETSH_CMD+=(show ${LIST_TARGET})


  if [ -n "${INTERFACE}" ];then
    INTERFACE="`get-interface`" || error-out "Could't set Interface."
    NETSH_CMD+=(\"${INTERFACE}\")
  fi
}

# Main Variables
GETOPT_STR=':i:s:c:a:t:n:g:h'
while getopts ${GETOPT_STR} opt; do
  case $opt in
    i)
      INTERFACE="${OPTARG}"
      ;;
    s)
      SOURCE="${OPTARG}"
      ;;
    a)
      ADDRESS="${OPTARG}"
      ;;
    c)
      NET_CMD="${OPTARG}"
      ;;
    t)
      LIST_TARGET="${OPTARG}"
      ;;
    n)
      STATIC_NETMASK="${OPTARG}"
      ;;
    g)
      STATIC_GATEWAY="${OPTARG}"
      ;;
    h)
      echo "THEY WANT HELP!"
      exit 0
      ;;
  esac
done

NETSH_CMD=("${NETSH_BIN}" interface ipv4)
case "${NET_CMD,,}" in
  set)
    set-interface
    ;;
  list)
    list-interface
    ;;
  *)
    error-out "Invalid command '${NET_CMD}'."
    ;;
esac

eval ${NETSH_CMD[@]}
exit 0
